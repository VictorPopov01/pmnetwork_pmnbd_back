<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\pmnbd\models\siteobject;

use Exception;
use Yii;

/**
 * This is the base-model class for table "site_object_media_target".
 *
 * @property integer $id
 * @property integer $site_object_id
 * @property string $type
 * @property integer $index
 *
 * @property backend\modules\pmnbd\models\siteobject\SiteObjectMedia[] $siteObjectMedia
 * @property backend\modules\pmnbd\models\siteobject\SiteObject $siteObject
 * @property string $aliasModel
 */
class SiteObjectMediaTarget extends \yii\db\ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'site_object_media_target';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['site_object_id', 'index'], 'integer'],
            [['type'], 'string', 'max' => 255],
            [['site_object_id'], 'exist', 'skipOnError' => true, 'targetClass' => SiteObject::className(), 'targetAttribute' => ['site_object_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'site_object_id' => Yii::t('models', 'Site Object ID'),
            'type' => Yii::t('models', 'Type'),
            'index' => Yii::t('models', 'Index'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSiteObjectMedia()
    {
        return $this->hasMany(SiteObjectMedia::className(), ['media_target_id' => 'id'])->orderBy('sort ASC');
    }

    /** @return backend\modules\pmnbd\models\siteobject\Media[] */
    public function getMediaArray()
    {
        return array_map(function ($mediaObj) {
            return $mediaObj->media;
        }, $this->siteObjectMedia);
    }

    /**
     * @return SiteObjectMedia
     * @throws Exception
     */
    public function attachMedia($media)
    {
        $newMedia = new SiteObjectMedia([
            'media_target_id' => $this->id,
            'media_id' => $media->id,
        ]);
        if ($newMedia->save()) {
            return $newMedia;
        } else throw new Exception("Не удалось закрепить файл за объектом");
    }

    public function beforeDelete()
    {
        $objectsToClean = $this->siteObjectMedia;
        foreach ($objectsToClean as $object) {
            if (!$object->delete()) {
                return false;
            }
        }

        return parent::beforeDelete();
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSiteObject()
    {
        return $this->hasOne(SiteObject::className(), ['id' => 'site_object_id']);
    }
}
